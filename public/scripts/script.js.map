{"version":3,"file":"script.js","mappings":"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","sources":["webpack:///./src/add-node-menu.ts","webpack:///./src/event.ts","webpack:///./src/graph.ts","webpack:///./src/index.ts","webpack:///./src/interpreter.ts","webpack:///./src/link.ts","webpack:///./src/node-definitions.ts","webpack:///./src/node.ts","webpack:///./src/pin.ts","webpack:///./src/util.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["import { Graph } from \"./graph\";\r\nimport { Node } from \"./node\";\r\nimport { nodeDefinitions } from \"./node-definitions\";\r\nimport { getTopLeft } from \"./util\";\r\n\r\n// Generate add node menu items\r\nfunction addTreeViewBranch(parent: HTMLUListElement, label: string): HTMLUListElement {\r\n    const branchElement: HTMLLIElement = document.createElement(\"li\");\r\n    branchElement.classList.add(\"branch\");\r\n    branchElement.addEventListener(\"click\", () => branchElement.classList.toggle(\"expanded\"));\r\n    \r\n    const rowElement: HTMLDivElement = document.createElement(\"div\");\r\n    const arrowElement: HTMLSpanElement = document.createElement(\"span\");\r\n    arrowElement.classList.add(\"material-symbols-rounded\");\r\n    rowElement.appendChild(arrowElement);\r\n    const labelElement: HTMLSpanElement = document.createElement(\"span\");\r\n    labelElement.textContent = label;\r\n    rowElement.appendChild(labelElement);\r\n    branchElement.appendChild(rowElement);\r\n    \r\n    const childList: HTMLUListElement = document.createElement(\"ul\");\r\n    branchElement.appendChild(childList);\r\n    \r\n    parent.appendChild(branchElement);\r\n    return childList;\r\n}\r\n\r\nfunction addTreeViewListItem(parent: HTMLUListElement, label: string): HTMLLIElement {\r\n    const itemElement: HTMLLIElement = document.createElement(\"li\");\r\n    itemElement.classList.add(\"branch\");\r\n    \r\n    const rowElement: HTMLDivElement = document.createElement(\"div\");\r\n    const labelElement: HTMLSpanElement = document.createElement(\"span\");\r\n    labelElement.textContent = label;\r\n    rowElement.appendChild(labelElement);\r\n    itemElement.appendChild(rowElement);\r\n    \r\n    parent.appendChild(itemElement);\r\n    return itemElement;\r\n}\r\n\r\nexport function initAddNodeMenu(graph: Graph) {\r\n    const nodeMenu: HTMLElement = document.getElementById(\"node-menu\");\r\n    nodeMenu.addEventListener(\"mousedown\", event => {\r\n        if(event.button == 0)\r\n            event.stopPropagation();\r\n    });\r\n    \r\n    const nodeTreeView: HTMLUListElement = <HTMLUListElement>document.getElementById(\"node-tree-view\");\r\n    const categoryLists = {};\r\n    \r\n    for (let key in nodeDefinitions) {\r\n        const definition = nodeDefinitions[key];\r\n        if(!(definition.category in categoryLists))\r\n            categoryLists[definition.category] = addTreeViewBranch(nodeTreeView, definition.category);\r\n        \r\n        const listItem: HTMLLIElement = addTreeViewListItem(categoryLists[definition.category], definition.name);\r\n        listItem.addEventListener(\"click\", event => {\r\n            if(event.button == 0) {\r\n                event.stopPropagation();\r\n                const nodePosition = graph.viewportToAreaPoint(getTopLeft(nodeMenu));\r\n                graph.nodes.push(new Node(graph, key, nodePosition));\r\n                nodeMenu.classList.remove(\"visible\");\r\n            }\r\n        });\r\n    }\r\n}","export interface ILiteEvent<T> {\r\n    addListener(handler: { (data?: T): void }) : void;\r\n    removeListener(handler: { (data?: T): void }) : void;\r\n}\r\n\r\nexport class LiteEvent<T> implements ILiteEvent<T> {\r\n    private handlers: { (data?: T): void; }[] = [];\r\n\r\n    public addListener(handler: { (data?: T): void }): void {\r\n        this.handlers.push(handler);\r\n    }\r\n\r\n    public removeListener(handler: { (data?: T): void }): void {\r\n        this.handlers = this.handlers.filter(h => h !== handler);\r\n    }\r\n\r\n    public dispatch(data?: T): void {\r\n        this.handlers.slice(0).forEach(h => h(data));\r\n    }\r\n\r\n    public expose() : ILiteEvent<T> {\r\n        return this;\r\n    }\r\n}","import { Pin, PinType } from \"./pin\";\r\nimport { Node } from \"./node\";\r\nimport { Link } from \"./link\";\r\nimport { Point, getTranslation, setTranslation } from \"./util\";\r\n\r\nexport class Graph {\r\n    viewport: HTMLElement;\r\n    graphArea: HTMLElement;\r\n    nodes: Array<Node> = [];\r\n    \r\n    private _dragCursorBegin: Point;\r\n    private _dragTargetBegin: Point;\r\n    \r\n    private _panning: boolean = false;\r\n    private _dragging: boolean = false;\r\n\r\n    private _dragNode: Node = null;\r\n    \r\n    private _linking: boolean = false;\r\n    private _linkPin: Pin = null;\r\n    private _drawingLink: Link;\r\n\r\n    constructor() {\r\n        this.viewport = document.getElementById(\"graph-viewport\");\r\n        this.graphArea = document.getElementById(\"graph-area\");\r\n        this._drawingLink = new Link();\r\n        this._drawingLink.reset();\r\n        this.viewport.addEventListener(\"mousedown\", event => this.onMouseDown(event));\r\n        this.viewport.addEventListener(\"mousemove\", event => this.onMouseMove(event));\r\n        this.viewport.addEventListener(\"mouseup\", event => this.onMouseUp(event));\r\n        this.viewport.addEventListener(\"contextmenu\", event => this.onContextMenu(event));\r\n    }\r\n\r\n    beginDrag(node: Node, position: Point): void {\r\n        if(this._panning || this._linking)\r\n            return;\r\n\r\n        this._dragNode = node;\r\n        this._dragNode.element.style.cursor = \"grabbing\";\r\n        this._dragCursorBegin = position;\r\n        this._dragTargetBegin = this._dragNode.position;\r\n        this._dragging = true;\r\n    }\r\n\r\n    beginLink(pin: Pin): void {\r\n        if(this._panning || this._dragging)\r\n            return;\r\n\r\n        this._linkPin = pin;\r\n        this._linkPin.linking = true;\r\n        this._linking = true;\r\n\r\n        const position: Point = this._linkPin.position;\r\n        this._drawingLink.setPoints(position, position);\r\n        this._drawingLink.valueType = pin.valueType;\r\n    }\r\n\r\n    endLink(pin: Pin): void {\r\n        if(this._linkPin != pin\r\n            && this._linkPin.type != pin.type         \r\n            && this._linkPin.node != pin.node\r\n            && this._linkPin.valueType == pin.valueType) {\r\n            let link: Link;\r\n            switch(this._linkPin.type) {\r\n                case PinType.Output:\r\n                    link = new Link(this._linkPin, pin);\r\n                    break;\r\n                case PinType.Input:\r\n                    link = new Link(pin, this._linkPin);\r\n                    break;\r\n            }\r\n            link.valueType = pin.valueType;     \r\n            this._linkPin.addLink(link);\r\n            pin.addLink(link);\r\n        }\r\n        this.endLinking();\r\n    }\r\n\r\n    viewportToAreaPoint(point: Point): Point {\r\n        const areaPos = getTranslation(this.graphArea);\r\n        return point.subtract(areaPos.x, areaPos.y);\r\n    }\r\n\r\n    private onMouseDown(event: MouseEvent): void {\r\n        if(event.button == 0)\r\n            document.getElementById(\"node-menu\").classList.remove(\"visible\");\r\n\r\n        if(event.button == 1 && !this._dragging && !this._linking) {\r\n            this._dragTargetBegin = getTranslation(this.graphArea);\r\n            this._dragCursorBegin = new Point(event.clientX, event.clientY);\r\n            this._panning = true;\r\n        }\r\n    }\r\n\r\n    private onMouseMove(event: MouseEvent): void {\r\n        if(this._panning) {\r\n            let position: Point = new Point(\r\n                this._dragTargetBegin.x + event.clientX - this._dragCursorBegin.x,\r\n                this._dragTargetBegin.y + event.clientY - this._dragCursorBegin.y\r\n            );\r\n            setTranslation(this.graphArea, position);\r\n        }\r\n\r\n        if(this._dragging) {\r\n            let position: Point = new Point(\r\n                this._dragTargetBegin.x + event.clientX - this._dragCursorBegin.x,\r\n                this._dragTargetBegin.y + event.clientY - this._dragCursorBegin.y\r\n            );\r\n            this._dragNode.position = position;\r\n        }\r\n    \r\n        if(this._linking) {\r\n            const areaRect: DOMRect = this.graphArea.getBoundingClientRect();\r\n            const position: Point = new Point(event.clientX - areaRect.left, event.clientY - areaRect.top);\r\n            switch(this._linkPin.type) {\r\n                case PinType.Output:\r\n                    this._drawingLink.endPoint = position;\r\n                    break;\r\n                case PinType.Input:\r\n                    this._drawingLink.startPoint = position;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private onMouseUp(event: MouseEvent): void {\r\n        if(this._panning) {\r\n            this._panning = false;\r\n        }\r\n        \r\n        if(this._dragging) {\r\n            this._dragNode.element.style.cursor = null;\r\n            this._dragNode = null;\r\n            this._dragging = false;\r\n        }\r\n\r\n        if(this._linking) {\r\n            this.endLinking();\r\n        }\r\n    }\r\n\r\n    private onContextMenu(event: MouseEvent): void {\r\n        event.preventDefault();\r\n        const viewportRect: DOMRect = this.viewport.getBoundingClientRect();\r\n        const nodeMenu: HTMLElement = document.getElementById(\"node-menu\");\r\n        const nodeMenuRect: DOMRect = nodeMenu.getBoundingClientRect();\r\n        const alignRight = event.clientX > viewportRect.width / 2;\r\n        nodeMenu.style.left = `${event.clientX - viewportRect.x - (alignRight ? nodeMenuRect.width : 0)}px`;\r\n        nodeMenu.style.top = `${event.clientY - viewportRect.y}px`;\r\n        nodeMenu.classList.add(\"visible\");\r\n\r\n        const searchbar: HTMLInputElement = <HTMLInputElement>document.getElementById(\"node-search-bar\");\r\n        searchbar.value = \"\";\r\n        searchbar.focus();\r\n    }\r\n\r\n    private endLinking() {\r\n        this._drawingLink.reset();\r\n        this._linking = false;\r\n        this._linkPin.linking = false;\r\n    }\r\n}\r\n","let nodes = [\r\n    {\r\n        id: 0,\r\n        type: \"start\",\r\n        posX: 32,\r\n        posY: 32,\r\n        inLinks: [],\r\n        outLinks: [{node: 1, index: 0}]\r\n    },\r\n    {\r\n        id: 1,\r\n        type: \"add\",\r\n        posX: 160,\r\n        posY: 32,\r\n        inLinks: [{node: 0, index: 0}, {node: null}],\r\n        outLinks: [{node: null}]\r\n    },\r\n    {\r\n        id: 2,\r\n        type: \"if\",\r\n        posX: 288,\r\n        posY: 32,\r\n        inLinks: [],\r\n        outLinks: []\r\n    }\r\n];\r\n\r\nimport { Graph } from \"./graph\";\r\nimport { Node } from \"./node\";\r\nimport { Point } from \"./util\";\r\nimport { initAddNodeMenu } from \"./add-node-menu\";\r\nimport { interpret } from \"./interpreter\";\r\n\r\n// Generate graph\r\nconst graph: Graph = new Graph();\r\ninitAddNodeMenu(graph);\r\n\r\n// Load nodes\r\n/*for (let i = 0; i < nodes.length; i++) {\r\n    const nodeData = nodes[i];\r\n    graph.nodes.push(new Node(graph, nodeData.type, new Point(nodeData.posX, nodeData.posY)));\r\n}*/\r\n\r\nconst start: Node = new Node(graph, \"start\", new Point(32, 32));\r\ngraph.nodes.push(start);\r\n\r\nconst runButton: HTMLButtonElement = <HTMLButtonElement>document.getElementById(\"run-button\");\r\nrunButton.addEventListener(\"click\", () => {\r\n    interpret(start);\r\n});\r\n","import { nodeDefinitions } from \"./node-definitions\";\r\nimport { Node } from \"./node\";\r\n\r\nfunction evaluateNode(node: Node): null | number | boolean | string {\r\n    if(node === null)\r\n        return null;\r\n        \r\n    switch(node.type) {\r\n        case \"start\": {\r\n            evaluateNode(node.getOutput(0));\r\n            return null;\r\n        }\r\n        case \"if\": {\r\n            let input: Node | number | boolean | string = node.getInput(1);\r\n            if(input instanceof Node)\r\n                input = evaluateNode(input);\r\n\r\n            if(typeof input === 'boolean')\r\n                evaluateNode(node.getOutput(input ? 0 : 1));\r\n            else\r\n                console.error(\"Expected inputs [boolean] interpreting node 'if'\");\r\n            return null;\r\n        }\r\n        case \"while\": {\r\n            while(true) {\r\n                let input: Node | number | boolean | string = node.getInput(1);\r\n                if(input instanceof Node)\r\n                    input = evaluateNode(input);\r\n                    \r\n                if(typeof input === 'boolean')\r\n                {\r\n                    if(input)\r\n                        evaluateNode(node.getOutput(1));\r\n                    else\r\n                        break;\r\n                }\r\n                else {\r\n                    console.error(\"Expected inputs [boolean] interpreting node 'while\");\r\n                    return null;\r\n                }\r\n            }\r\n            evaluateNode(node.getOutput(0));\r\n            return null;\r\n        }\r\n        case \"for\": {\r\n            let first: Node | number | boolean | string = node.getInput(1);\r\n            let last: Node | number | boolean | string = node.getInput(2);\r\n            let step: Node | number | boolean | string = node.getInput(3);\r\n            if(first instanceof Node)\r\n                first = evaluateNode(first);\r\n            if(last instanceof Node)\r\n                last = evaluateNode(last);\r\n            if(step instanceof Node)\r\n                step = evaluateNode(step);\r\n\r\n            if(typeof first === \"number\" && typeof last === \"number\" && typeof step === \"number\") {\r\n                let i: number = first;\r\n                while(i < last) {\r\n                    evaluateNode(node.getOutput(1));\r\n                    i += step;\r\n                }\r\n                evaluateNode(node.getOutput(0));\r\n            }\r\n            else {\r\n                console.error(\"Expected inputs [number, number, number] interpreting node 'for\");\r\n                return null;\r\n            }\r\n            return null;\r\n        }\r\n        case \"add\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a + b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'add'\");\r\n            return 0;\r\n        }\r\n        case \"subtract\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a - b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'subtract'\");\r\n            return 0;\r\n        }\r\n        case \"multiply\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a * b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'multiply'\");\r\n            return 0;\r\n        }\r\n        case \"divide\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\") {\r\n                if(b == 0) {\r\n                    console.error(\"Cannot divide by zero interpreting node 'divide\");\r\n                    return 0;\r\n                }\r\n                return a / b;\r\n            }\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'add'\");\r\n            return 0;\r\n        }\r\n        case \"and\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"boolean\" && typeof b === \"boolean\")\r\n                return a && b;\r\n            else\r\n                console.error(\"Expected inputs [boolean, boolean] interpreting node 'and'\");\r\n            return false;\r\n        }\r\n        case \"or\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"boolean\" && typeof b === \"boolean\")\r\n                return a && b;\r\n            else\r\n                console.error(\"Expected inputs [boolean, boolean] interpreting node 'and'\");\r\n            return false;\r\n        }\r\n        case \"not\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n\r\n            if(typeof a === \"boolean\")\r\n                return !a;\r\n            else\r\n                console.error(\"Expected inputs [boolean] interpreting node 'not'\");\r\n            return false;\r\n        }\r\n        case \"equal\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a == b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'equal'\");\r\n            return false;\r\n        }\r\n        case \"notEqual\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a != b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'notEqual'\");\r\n            return false;\r\n        }\r\n        case \"less\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a < b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'less'\");\r\n            return false;\r\n        }\r\n        case \"lessOrEqual\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a <= b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'lessOrEqual'\");\r\n            return false;\r\n        }\r\n        case \"greater\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a > b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'greater'\");\r\n            return false;\r\n        }\r\n        case \"greaterOrEqual\": {\r\n            let a: Node | number | boolean | string = node.getInput(0);\r\n            let b: Node | number | boolean | string = node.getInput(1);\r\n            if(a instanceof Node)\r\n                a = evaluateNode(a);\r\n            if(b instanceof Node)\r\n                b = evaluateNode(b);\r\n\r\n            if(typeof a === \"number\" && typeof b === \"number\")\r\n                return a >= b;\r\n            else\r\n                console.error(\"Expected inputs [number, number] interpreting node 'greaterOrEqual'\");\r\n            return false;\r\n        }\r\n        case \"printInt\": {\r\n            let input: Node | number | boolean | string = node.getInput(1);\r\n            if(input instanceof Node)\r\n                input = evaluateNode(input);\r\n\r\n            if(typeof input === \"number\") {\r\n                console.log(input);\r\n                evaluateNode(node.getOutput(0));\r\n            }\r\n            else\r\n                console.error(\"Expected inputs [number] interpreting node 'printInt'\");\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function interpret(start: Node) {\r\n    if(start.type == \"start\")\r\n        evaluateNode(start);\r\n}","import { Pin, ValueType } from \"./pin\";\r\nimport { Point, Rect, setTranslation } from \"./util\";\r\n\r\nexport class Link {\r\n    static readonly curve : number = 32;\r\n\r\n    private _startPoint: Point;\r\n    private _endPoint: Point;\r\n    private _element: SVGElement;\r\n    private _path: SVGPathElement;\r\n    \r\n    private _startPin: Pin;\r\n    private _endPin: Pin;\r\n\r\n    constructor(startPin?: Pin, endPin?: Pin) {      \r\n        if(startPin != undefined && startPin != null) {\r\n            this._startPin = startPin;\r\n            this._startPoint = startPin.position;\r\n        }\r\n        else {\r\n            this._startPin = null;\r\n            this._startPoint = new Point();\r\n        }\r\n\r\n        if(endPin != undefined && endPin != null) {\r\n            this._endPin = endPin;\r\n            this._endPoint = endPin.position;\r\n        }\r\n        else {\r\n            this._endPin = null;\r\n            this._endPoint = new Point();\r\n        }\r\n        this._element = <SVGElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this._element.classList.add(\"graph-link\");\r\n        this._path = <SVGPathElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.appendChild(this._path);\r\n        const graphLinks: HTMLElement = document.getElementById(\"graph-links\");\r\n        graphLinks.appendChild(this._element);\r\n        this.updatePath();\r\n    }\r\n\r\n    get startPin(): Pin {\r\n        return this._startPin;\r\n    }\r\n\r\n    get endPin(): Pin {\r\n        return this._endPin;\r\n    }\r\n\r\n    set startPoint(startPoint: Point) {\r\n        this._startPoint = startPoint;\r\n        this.updatePath();\r\n    }\r\n\r\n    set endPoint(endPoint: Point) {\r\n        this._endPoint = endPoint;\r\n        this.updatePath();\r\n    }\r\n\r\n    set valueType(valueType: ValueType) {\r\n        this._element.classList.value = \"graph-link\";\r\n        switch(valueType) {\r\n            case ValueType.Flow: this._element.classList.add(\"link-type-flow\"); break;\r\n            case ValueType.Int: this._element.classList.add(\"link-type-int\"); break;\r\n            case ValueType.Float: this._element.classList.add(\"link-type-float\"); break;\r\n            case ValueType.String: this._element.classList.add(\"link-type-string\"); break;\r\n            case ValueType.Boolean: this._element.classList.add(\"link-type-boolean\"); break;\r\n        }\r\n    }\r\n\r\n    setPoints(startPoint: Point, endPoint: Point): void {\r\n        this._startPoint = startPoint;\r\n        this._endPoint = endPoint;\r\n        this.updatePath();\r\n    }\r\n\r\n    reset(): void {\r\n        this._startPoint = new Point(0, 0);\r\n        this._endPoint = new Point(0, 0);\r\n        this._path.setAttribute(\"d\", \"\");\r\n    }\r\n\r\n    destroy(): void {\r\n        this._path.parentElement.removeChild(this._path);\r\n        this._startPin.breakLink(this);\r\n        this._endPin.breakLink(this);\r\n    }\r\n\r\n    private updatePath(): void {\r\n        const startControlX: number = this._startPoint.x + Link.curve;\r\n        const endControlX: number = this._endPoint.x - Link.curve;\r\n\r\n        const newBounds: Rect = new Rect();\r\n\r\n        const s: Point = new Point();\r\n        const e: Point = new Point();\r\n\r\n        if(this._startPoint.x <= endControlX) {\r\n            newBounds.x = this._startPoint.x;\r\n            newBounds.width = this._endPoint.x - this._startPoint.x;\r\n            e.x = newBounds.width;\r\n        }\r\n        else {\r\n            newBounds.x = endControlX;\r\n            newBounds.width = startControlX - endControlX;\r\n            s.x = this._startPoint.x - endControlX;\r\n            e.x = Link.curve;\r\n        }\r\n\r\n        if(this._startPoint.y <= this._endPoint.y) {\r\n            newBounds.y = this._startPoint.y - 2;\r\n            newBounds.height = this._endPoint.y - this._startPoint.y + 4;\r\n            s.y = 2;\r\n            e.y = newBounds.height - 2;\r\n        }\r\n        else {\r\n            newBounds.y = this._endPoint.y - 2;\r\n            newBounds.height = this._startPoint.y - this._endPoint.y + 4;\r\n            s.y = newBounds.height - 2;\r\n            e.y = 2;\r\n        }\r\n\r\n        setTranslation(this._element, new Point(newBounds.x, newBounds.y));\r\n        this._element.setAttribute(\"width\", `${newBounds.width}`);\r\n        this._element.setAttribute(\"height\", `${newBounds.height}`)\r\n        \r\n        this._path.setAttribute(\"d\", `M ${s.x} ${s.y} C ${s.x + Link.curve} ${s.y}, ${e.x - Link.curve} ${e.y}, ${e.x} ${e.y}`);\r\n    }\r\n}","export const nodeDefinitions = {\r\n    // Flow\r\n    start: {\r\n        name: \"Start\",\r\n        category: \"Flow\",\r\n        inputs: [],\r\n        outputs: [{name: \"\", type: \"Flow\"}]\r\n    },\r\n    if: {\r\n        name: \"If\",\r\n        category: \"Flow\",\r\n        inputs: [{ name: \"\", type: \"Flow\"}, { name: \"Condition\", type: \"Bool\"}],\r\n        outputs: [{ name: \"True\", type: \"Flow\"}, { name: \"False\", type: \"Flow\"}]\r\n    },\r\n    while: {\r\n        name: \"While\",\r\n        category: \"Flow\",\r\n        inputs: [{ name: \"\", type: \"Flow\"}, { name: \"Condition\", type: \"Bool\"}],\r\n        outputs: [{ name: \"Exit\", type: \"Flow\"}, { name: \"Body\", type: \"Flow\"}]\r\n    },\r\n    for: {\r\n        name: \"For\",\r\n        category: \"Flow\",\r\n        inputs: [{ name: \"\", type: \"Flow\"}, { name: \"First\", type: \"Int\"}, { name: \"Last\", type: \"Int\"}, { name: \"Step\", type: \"Int\"}],\r\n        outputs: [{ name: \"Exit\", type: \"Flow\"}, { name: \"Body\", type: \"Flow\"}]\r\n    },\r\n\r\n    // Math\r\n    add: {\r\n        name: \"Add\",\r\n        category: \"Math\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Int\"}]\r\n    },\r\n    subtract: {\r\n        name: \"Subtract\",\r\n        category: \"Math\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Int\"}]\r\n    },\r\n    multipy: {\r\n        name: \"Multiply\",\r\n        category: \"Math\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Int\"}]\r\n    },\r\n    divide: {\r\n        name: \"Divide\",\r\n        category: \"Math\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Int\"}]\r\n    },\r\n\r\n    // Logic\r\n    and: {\r\n        name: \"And\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Bool\"}, {name: \"B\", type: \"Bool\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    or: {\r\n        name: \"Or\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Bool\"}, {name: \"B\", type: \"Bool\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    not: {\r\n        name: \"Not\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"\", type: \"Bool\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    equal: {\r\n        name: \"Equal\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    notEqual: {\r\n        name: \"Not Equal\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    less: {\r\n        name: \"Less\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    lessOrEqual: {\r\n        name: \"Less Or Equal\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    greater: {\r\n        name: \"Greater\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n    greaterOrEqual: {\r\n        name: \"Greater Or Equal\",\r\n        category: \"Logic\",\r\n        inputs: [{name: \"A\", type: \"Int\"}, {name: \"B\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Bool\"}]\r\n    },\r\n\r\n    // Printing\r\n    printInt: {\r\n        name: \"Print Int\",\r\n        category: \"IO\",\r\n        inputs: [{name: \"\", type: \"Flow\"}, {name: \"\", type: \"Int\"}],\r\n        outputs: [{name: \"\", type: \"Flow\"}]\r\n    }\r\n};","import { Graph } from \"./graph\";\r\nimport { Pin, PinType, ValueType } from \"./pin\";\r\nimport { nodeDefinitions } from \"./node-definitions\";\r\nimport { Point, getTranslation, setTranslation } from \"./util\";\r\n\r\nexport class Node {\r\n    element : HTMLDivElement;\r\n    private _inputs: Array<{ pin: Pin, valueField: NodeValueField }> = [];\r\n    private _outputs: Array<Pin> = [];\r\n\r\n    private _graph: Graph;\r\n    private _type: string;\r\n\r\n    constructor(graph: Graph, type: string, position: Point) {\r\n        this._graph = graph;\r\n        this._type = type;\r\n\r\n        if(!(type in nodeDefinitions)) {\r\n            console.error(\"Invalid node types\");\r\n            return;\r\n        }\r\n\r\n        const nodeDefinition = nodeDefinitions[type];\r\n    \r\n        // Node\r\n        this.element = document.createElement(\"div\");\r\n        this.element.addEventListener(\"mousedown\", event => this.onMouseDown(event));\r\n        this.element.classList.add(\"graph-node\");\r\n    \r\n        // Head\r\n        const head: HTMLDivElement = document.createElement(\"div\");\r\n        head.classList.add(\"head\");\r\n        const title: HTMLSpanElement = document.createElement(\"span\");\r\n        title.textContent = nodeDefinition.name;\r\n        head.appendChild(title);\r\n        this.element.appendChild(head);\r\n\r\n        // Body\r\n        const body: HTMLDivElement = document.createElement(\"div\");\r\n        body.classList.add(\"body\");\r\n        this.element.appendChild(body);\r\n    \r\n        // Rows\r\n        let rows = Math.max(nodeDefinition.inputs.length, nodeDefinition.outputs.length);\r\n        for (let i = 0; i < rows; i++) {\r\n            const row: number = i + 1;\r\n\r\n            if(i < nodeDefinition.inputs.length) {\r\n                const input = nodeDefinition.inputs[i];\r\n                const valueType: ValueType = stringToValueType(input.type);\r\n\r\n                // Input Pin\r\n                let inputPin: Pin = new Pin(this._graph, this, valueType, PinType.Input);\r\n                inputPin.element.style.gridColumn = \"1\";\r\n                inputPin.element.style.gridRow = row.toString();\r\n                body.appendChild(inputPin.element);\r\n                \r\n                // Input Label\r\n                const inputLabel: HTMLSpanElement = document.createElement(\"span\");\r\n                inputLabel.textContent = input.name;\r\n                inputLabel.style.gridColumn = \"2\";\r\n                inputLabel.style.gridRow = row.toString();\r\n                body.appendChild(inputLabel);\r\n                \r\n                // Input Field\r\n                let valueField: NodeValueField = null;\r\n                if(valueType != ValueType.Flow) {\r\n                    if(valueType & (ValueType.Int | ValueType.Float))\r\n                        valueField = new NumberValueField();\r\n                    else if(valueType == ValueType.String)\r\n                        valueField = new TextValueField();\r\n                    else if(valueType == ValueType.Boolean) \r\n                        valueField = new BooleanValueField();\r\n    \r\n                    valueField.element.style.gridColumn = \"3\";\r\n                    valueField.element.style.gridRow = row.toString();\r\n                    body.appendChild(valueField.element);\r\n    \r\n                    inputPin.onLinksChanged.addListener((linkCount: number) => {\r\n                        valueField.element.style.visibility = linkCount > 0 ? \"hidden\" : \"visible\";\r\n                    });\r\n                }\r\n\r\n                this._inputs.push({ pin: inputPin, valueField: valueField });\r\n\r\n                /* Enum\r\n                else if(valueType == ValueType.Enum) {\r\n                    const inputSelect: HTMLSelectElement = document.createElement(\"select\");\r\n                    const trueOption = document.createElement(\"option\");\r\n                    trueOption.textContent = \"True\";\r\n                    inputSelect.options.add(trueOption);\r\n                    const falseOption = document.createElement(\"option\");\r\n                    falseOption.textContent = \"False\";\r\n                    inputSelect.options.add(falseOption);\r\n                    inputSelect.style.gridColumn = \"3\";\r\n                    inputSelect.style.gridRow = row.toString();\r\n                    body.appendChild(inputSelect);\r\n\r\n                    inputPin.onLinksChanged.addListener((linkCount: number) => {\r\n                        inputSelect.style.visibility = linkCount > 0 ? \"hidden\" : \"visible\";\r\n                    });\r\n                }*/\r\n            }\r\n    \r\n            if(i < nodeDefinition.outputs.length) {\r\n                const output = nodeDefinition.outputs[i];\r\n                const valueType: ValueType = stringToValueType(output.type);\r\n\r\n                const outputLabel: HTMLSpanElement = document.createElement(\"span\");\r\n                outputLabel.classList.add(\"text-right\");\r\n                outputLabel.textContent = output.name;\r\n                outputLabel.style.gridColumn = \"5\";\r\n                outputLabel.style.gridRow = row.toString();\r\n                body.appendChild(outputLabel);\r\n\r\n                const outputPin = new Pin(this._graph, this, valueType);\r\n                outputPin.element.style.gridColumn = \"6\";\r\n                outputPin.element.style.gridRow = row.toString();\r\n                this._outputs.push(outputPin);\r\n                body.appendChild(outputPin.element);\r\n            }\r\n        }\r\n        const graphNodes = document.getElementById(\"graph-nodes\");\r\n        graphNodes.appendChild(this.element);\r\n\r\n        this.position = position;\r\n    }\r\n\r\n    get position(): Point {\r\n        return getTranslation(this.element);\r\n    }\r\n\r\n    set position(position: Point) {\r\n        setTranslation(this.element, position);\r\n        this._inputs.forEach(input => input.pin.updateLinkPositions());\r\n        this._outputs.forEach(output => output.updateLinkPositions());\r\n    }\r\n\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    getInput(index: number): Node | number | boolean | string {\r\n        const input: { pin: Pin, valueField: NodeValueField } = this._inputs[index];\r\n        if(input.pin.links.length > 0) {\r\n            return input.pin.links[0].startPin.node;\r\n        }\r\n        return input.valueField.value;\r\n    }\r\n\r\n    getOutput(index: number): Node {\r\n        const output: Pin = this._outputs[index];\r\n        if(output.links.length > 0)\r\n            return output.links[0].endPin.node;\r\n        return null;\r\n    }\r\n\r\n    private onMouseDown(event: MouseEvent): void {\r\n        if(!(<Element>event.target).classList.contains(\"graph-node\"))\r\n            return; \r\n        \r\n        if(event.button == 0) {\r\n            event.preventDefault();\r\n\r\n            const position: Point = new Point(event.clientX, event.clientY);\r\n            this._graph.beginDrag(this, position);\r\n        }\r\n    }\r\n}\r\n\r\ninterface NodeValueField {\r\n    get element(): HTMLElement;\r\n    get value(): number | boolean | string;\r\n}\r\n\r\nclass BooleanValueField implements NodeValueField {\r\n    private _checked: boolean;\r\n    private _element: HTMLDivElement;\r\n\r\n    constructor() {\r\n        this._element = document.createElement(\"div\");\r\n        this._element.classList.add(\"checkbox\");\r\n        const tick: HTMLSpanElement = document.createElement(\"span\");\r\n        tick.classList.add(\"material-symbols-rounded\");\r\n        tick.textContent = \"check\";\r\n        this._element.appendChild(tick);\r\n        this._element.addEventListener(\"click\", () => { this.checked = !this._checked });\r\n    }\r\n\r\n    set checked(checked: boolean) {\r\n        this._checked = checked;\r\n        this._element.setAttribute(\"checked\", `${this._checked}`);\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get value(): boolean {\r\n        return this._checked;\r\n    }\r\n}\r\n\r\nclass TextValueField implements NodeValueField {\r\n    private _element: HTMLSpanElement;\r\n\r\n    constructor() {\r\n        this._element = document.createElement(\"span\");\r\n        this._element.classList.add(\"input\");\r\n        this._element.setAttribute(\"role\", \"textbox\");\r\n        this._element.setAttribute(\"contenteditable\", \"true\");\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get value(): string {\r\n        return this._element.textContent;\r\n    }\r\n}\r\n\r\nclass NumberValueField implements NodeValueField {\r\n    private _element: HTMLSpanElement;\r\n\r\n    constructor() {\r\n        this._element = document.createElement(\"span\");\r\n        this._element.classList.add(\"input\");\r\n        this._element.setAttribute(\"role\", \"textbox\");\r\n        this._element.setAttribute(\"contenteditable\", \"true\");\r\n    }\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    get value(): number {\r\n        return parseInt(this._element.textContent);\r\n    }\r\n}\r\n\r\nfunction stringToValueType(valueType: string): ValueType {\r\n    switch(valueType) {\r\n        case \"Flow\": return ValueType.Flow;\r\n        case \"Int\": return ValueType.Int;\r\n        case \"Float\": return ValueType.Float;\r\n        case \"String\": return ValueType.String;\r\n        case \"Bool\": return ValueType.Boolean;\r\n        default: return ValueType.Flow;\r\n    }\r\n}","import { Link } from \"./link\";\r\nimport { Graph } from \"./graph\";\r\nimport { Node } from \"./node\";\r\nimport { ILiteEvent, LiteEvent } from \"./event\";\r\nimport { Point } from \"./util\";\r\n\r\nexport enum PinType {\r\n    Output,\r\n    Input\r\n}\r\n\r\nexport enum ValueType {\r\n    Flow = 1,\r\n    Int = 2,\r\n    Float = 4,\r\n    String = 8,\r\n    Boolean = 16\r\n}\r\n\r\nexport class Pin {\r\n    private _type: PinType = PinType.Output;\r\n    private _valueType: ValueType;\r\n    links: Array<Link> = [];\r\n\r\n    private _graph: Graph;\r\n    private _node: Node;\r\n    private _linking: boolean;\r\n\r\n    element: HTMLDivElement;\r\n    private graphic: HTMLDivElement;\r\n\r\n    private readonly linksChangedEvent = new LiteEvent<number>();\r\n\r\n    constructor(graph: Graph, node: Node, valueType: ValueType, type: PinType = PinType.Output) {\r\n        this._graph = graph;\r\n        this._node = node;\r\n        this._type = type;\r\n        this._valueType = valueType;\r\n\r\n        this.element = document.createElement(\"div\");\r\n        this.element.classList.add(\"pin\");\r\n        if(this._type == PinType.Output)\r\n            this.element.classList.add(\"right\");\r\n\r\n        this.element.addEventListener(\"mousedown\", event => this.onMouseDown(event));\r\n        this.element.addEventListener(\"mouseup\", event => this.onMouseUp(event));\r\n        this.element.addEventListener(\"mouseenter\", event => this.onMouseEnter(event));\r\n        this.element.addEventListener(\"mouseleave\", event => this.onMouseExit(event))\r\n        this.element.addEventListener(\"contextmenu\", event => event.preventDefault());\r\n\r\n        this.graphic = document.createElement(\"div\");\r\n        this.graphic.classList.add(\"pin-graphic\");\r\n        switch(this._valueType) {\r\n            case ValueType.Flow: this.graphic.classList.add(\"type-flow\"); break;\r\n            case ValueType.Int: this.graphic.classList.add(\"type-int\"); break;\r\n            case ValueType.Float: this.graphic.classList.add(\"type-float\"); break;\r\n            case ValueType.String: this.graphic.classList.add(\"type-string\"); break;\r\n            case ValueType.Boolean: this.graphic.classList.add(\"type-boolean\"); break;\r\n        }\r\n\r\n        this.element.appendChild(this.graphic);\r\n    }\r\n\r\n    get type(): PinType { return this._type; }\r\n    get valueType(): ValueType { return this._valueType; }\r\n    get node(): Node { return this._node; }\r\n\r\n    get onLinksChanged(): ILiteEvent<number> { return this.linksChangedEvent.expose(); }\r\n\r\n    get position(): Point {\r\n        const graphRect: DOMRect = this._graph.graphArea.getBoundingClientRect();\r\n        const pinRect: DOMRect = this.element.getBoundingClientRect();\r\n        return new Point(\r\n            pinRect.left + pinRect.width / 2 - graphRect.left,\r\n            pinRect.top + pinRect.height / 2 - graphRect.top);\r\n    }\r\n\r\n    set linking(linking: boolean) {\r\n        this._linking = linking;\r\n        this.updateFill();\r\n    }\r\n\r\n    addLink(link: Link): void {\r\n        this.links.push(link);\r\n        this.updateFill();\r\n        this.linksChangedEvent.dispatch(this.links.length);\r\n    }\r\n\r\n    breakLink(link: Link): void {\r\n        let index: number = this.links.indexOf(link);\r\n        if(index > -1)\r\n            this.links.splice(index, 1);\r\n        this.updateFill();\r\n        this.linksChangedEvent.dispatch(this.links.length);\r\n    }\r\n\r\n    updateLinkPositions(): void {\r\n        switch(this._type) {\r\n            case PinType.Output:\r\n                this.links.forEach(link => { link.startPoint = this.position });\r\n                break;\r\n            case PinType.Input:\r\n                this.links.forEach(link => { link.endPoint = this.position });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private updateFill() {\r\n        this.setGraphicSolid(this.links.length > 0 || this._linking);\r\n    }\r\n\r\n    private setGraphicSolid(solid: boolean): void {\r\n        if(solid)\r\n            this.element.classList.add(\"solid\");\r\n        else\r\n            this.element.classList.remove(\"solid\");\r\n    }\r\n\r\n    private onMouseDown(event: MouseEvent): void {\r\n        if(!(<Element>event.target).classList.contains(\"pin\"))\r\n            return;\r\n\r\n        if(event.button == 0) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this._graph.beginLink(this);\r\n        }\r\n        else if(event.button == 2) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const linkCount: number = this.links.length;\r\n            for (let i = 0; i < linkCount; i++)\r\n                this.links[0].destroy();     \r\n        }\r\n    }\r\n\r\n    private onMouseUp(event: MouseEvent): void {\r\n        if(!(<Element>event.target).classList.contains(\"pin\"))\r\n            return;\r\n\r\n        if(event.button == 0)\r\n            this._graph.endLink(this);\r\n    }\r\n\r\n    private onMouseEnter(event: MouseEvent): void {\r\n        this.setGraphicSolid(true);\r\n    }\r\n\r\n    private onMouseExit(event: MouseEvent): void {\r\n        this.updateFill();\r\n    }\r\n}","export class Point {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x?: number, y?: number) {\r\n        this.x = x ?? 0;\r\n        this.y = y ?? 0;\r\n    }\r\n\r\n    add(x: number, y: number): Point {\r\n        this.x += x;\r\n        this.y += y;\r\n        return this;\r\n    }\r\n\r\n    subtract(x: number, y: number): Point {\r\n        this.x -= x;\r\n        this.y -= y;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Rect {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(x?: number, y?: number, width?: number, height?: number) {\r\n        this.x = x ?? 0;\r\n        this.y = y ?? 0;\r\n        this.width = width ?? 0;\r\n        this.height = height ?? 0;\r\n    }\r\n}\r\n\r\nfunction roundMultiple(value: number, multiple: number): number {\r\n    return Math.round(value / multiple) * multiple;\r\n}\r\n\r\nfunction ceilMultiple(value: number, multiple: number): number {\r\n    return Math.ceil(value / multiple) * multiple;\r\n}\r\n\r\nexport function getTranslation(element: HTMLElement): Point {\r\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\r\n    const matrix: DOMMatrixReadOnly = new DOMMatrixReadOnly(style.transform);\r\n    return new Point(matrix.m41, matrix.m42);\r\n}\r\n\r\nexport function getTopLeft(element: HTMLElement): Point {\r\n    return new Point(element.offsetLeft, element.offsetTop);\r\n}\r\n\r\nexport function setTranslation(element: HTMLElement | SVGElement, translation: Point): void {\r\n    element.style.transform = `translate(${translation.x}px, ${translation.y}px)`;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["graph","nodeMenu","document","getElementById","addEventListener","event","button","stopPropagation","nodeTreeView","categoryLists","key","definition","nodeDefinitions","category","parent","label","branchElement","createElement","classList","add","toggle","rowElement","arrowElement","appendChild","labelElement","textContent","childList","addTreeViewBranch","itemElement","addTreeViewListItem","name","nodePosition","viewportToAreaPoint","getTopLeft","nodes","push","Node","remove","handlers","addListener","handler","this","removeListener","filter","h","dispatch","data","slice","forEach","expose","LiteEvent","_panning","_dragging","_dragNode","_linking","_linkPin","viewport","graphArea","_drawingLink","Link","reset","onMouseDown","onMouseMove","onMouseUp","onContextMenu","beginDrag","node","position","element","style","cursor","_dragCursorBegin","_dragTargetBegin","beginLink","pin","linking","setPoints","valueType","endLink","type","link","PinType","Output","Input","addLink","endLinking","point","areaPos","getTranslation","subtract","x","y","Point","clientX","clientY","setTranslation","areaRect","getBoundingClientRect","left","top","endPoint","startPoint","preventDefault","viewportRect","nodeMenuRect","alignRight","width","searchbar","value","focus","Graph","initAddNodeMenu","start","interpret","evaluateNode","getOutput","input","getInput","console","error","first","last","step","i","a","b","log","startPin","endPin","undefined","_startPin","_startPoint","_endPin","_endPoint","_element","createElementNS","_path","updatePath","ValueType","Flow","Int","Float","String","Boolean","setAttribute","destroy","parentElement","removeChild","breakLink","startControlX","curve","endControlX","newBounds","Rect","s","e","height","inputs","outputs","if","while","for","multipy","divide","and","or","not","equal","notEqual","less","lessOrEqual","greater","greaterOrEqual","printInt","_inputs","_outputs","_graph","_type","nodeDefinition","head","title","body","rows","Math","max","length","row","stringToValueType","inputPin","Pin","gridColumn","gridRow","toString","inputLabel","NumberValueField","TextValueField","BooleanValueField","onLinksChanged","linkCount","visibility","valueField","output","outputLabel","outputPin","updateLinkPositions","index","links","target","contains","tick","checked","_checked","parseInt","linksChangedEvent","_node","_valueType","onMouseEnter","onMouseExit","graphic","graphRect","pinRect","updateFill","indexOf","splice","setGraphicSolid","solid","window","getComputedStyle","matrix","DOMMatrixReadOnly","transform","m41","m42","offsetLeft","offsetTop","translation","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"sourceRoot":""}